<?xml version="1.0" encoding="UTF-8"?> 
	<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
		"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!-- namespace:表示命名空间，值是唯一的 -->
<!-- 1/没有实现类，mybatis会生成接口的实现类 2/例如IUSerDao 现在写成UserDao 把I去掉 3/namespace：表示命名空间，值必须为接口的名称（包括包名）-->
<mapper namespace="cn.tedu.dao.AddressDao"><!-- 定义接口名，接口调用实现类的方法（向上造型）（规范写法） -->
<!-- Integer insertAddress(Address address);id：必须和方法名一致 -->
  <insert id="insertAddress" parameterType="cn.tedu.bean.Address">
  insert into t_address(province,city,area,useraddress)values(#{province},#{city},#{area},#{useraddress})
  </insert>
	<!-- public Integer updateAddress(Address address); -->
	<update id="updateAddress" parameterType="cn.tedu.bean.Address">
	update t_address set province=#{province},city=#{city},area=#{area},useraddress=#{useraddress} where id=#{id}
	</update>
	<!-- public Integer deleteAddress(Address address); -->
	<delete id="deleteAddress" parameterType="cn.tedu.bean.Address">
	 delete from t_address where id=#{id}
	</delete>
	<!-- public Address selectById(Integer id);处理字段名和属性名不相同的第二种解决方案，处理字段名和属性名之间做一个映射； 1、resultMap:实现映射的节点;2、type:表示映射的java类的类型 ； 3、id:表示节点的值-->
	<!-- id：节点，表示用来映射主键字段的 ,result:节点表示映射除了主键字段之外的其他字段；column:数据库字段名；property：属性名（或者别名）-->
	<resultMap type="cn.tedu.bean.Address" id="resultAddress">
	<id column="id" property="id"/>
	<result column="province" property="province"/>
	<result column="city" property="city"/>
	<result column="area" property="area"/>
	<result column="useraddress" property="useraddress"/>
	</resultMap>
	<select id="selectById" resultMap="resultAddress">
	select *from t_address where id=#{id}
	</select>
	<select id="selectAll" resultMap="resultAddress">
	select id,province,city,area,useraddress from t_address
	</select>
</mapper>